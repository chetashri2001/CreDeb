// Generated by view binder compiler. Do not edit!
package com.example.credeb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.credeb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView doLoginButton;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText fname;

  @NonNull
  public final EditText lname;

  @NonNull
  public final EditText mobile;

  @NonNull
  public final EditText password;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView3;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView doLoginButton, @NonNull EditText email, @NonNull EditText fname,
      @NonNull EditText lname, @NonNull EditText mobile, @NonNull EditText password,
      @NonNull Button registerButton, @NonNull TextView textView, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.doLoginButton = doLoginButton;
    this.email = email;
    this.fname = fname;
    this.lname = lname;
    this.mobile = mobile;
    this.password = password;
    this.registerButton = registerButton;
    this.textView = textView;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.doLoginButton;
      TextView doLoginButton = rootView.findViewById(id);
      if (doLoginButton == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.fname;
      EditText fname = rootView.findViewById(id);
      if (fname == null) {
        break missingId;
      }

      id = R.id.lname;
      EditText lname = rootView.findViewById(id);
      if (lname == null) {
        break missingId;
      }

      id = R.id.mobile;
      EditText mobile = rootView.findViewById(id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.register_button;
      Button registerButton = rootView.findViewById(id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, doLoginButton, email, fname,
          lname, mobile, password, registerButton, textView, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
